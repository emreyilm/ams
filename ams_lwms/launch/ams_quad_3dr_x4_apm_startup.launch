<?xml version="1.0"?>
<launch>
  <include file="$(find ams)/launch/apm2.launch" />
    <!-- MOCAP     -->
    <node pkg="mocap_optitrack" 
      type="mocap_node" 
      name="mocap_node" 
      respawn="false"
      launch-prefix=""
      required="true">
      <rosparam file="$(find ams)/viz/mocap.yaml" command="load" />
    </node>
    <!-- JOY -->
    <node pkg="joy" type="joy_node" name="joy" required="true">
      <param name="dev" type="string" value="/dev/input/js0" />
      <param name="deadzone" value="0.005" />
      <param name="~autorepeat_rate" value="10" />
    </node>
    <!-- AMS -->
      <param name="robot_description"
    command="$(find xacro)/xacro '$(find ams_uav_description)/urdf/ams_quad_with_arm.urdf.xacro' "/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" output="screen" >
       <param name="publish_frequency" value="100"/>
    </node>
    <node pkg="ams" type="ams_manager_node" name="ams_manager" respawn="true" output="screen"/>
    <node pkg="ams" type="ams_quad_controller_node" name="ams_quad_controller" respawn="true" output="screen">
      <rosparam command="load" file="$(find ams)/config/3dr_x4_apm.yaml" />
    </node>
    <node pkg="ams" type="ams_teleop_node" name="ams_teleop" respawn="true" output="screen" />
    <node pkg="ams" type="ams_trajectory_planner" name="ams_trajectory_planner" respawn="true" output="screen" />
    <!-- VISUALIZATION -->
    <node pkg="rviz" type="rviz" name="rviz" args=" -d $(find ams)/rviz/ams_rviz.rviz" respawn="true" />
    <node pkg="ams_lwms" type="al5d_manipulation.py" name="al5d_manipulation" respawn="true" output="screen" />
    <node pkg="ams_lwms" type="al5d_ik_server.py" name="al5d_ik_server" respawn="true" output="screen" />
    <node name="lynxmotion_ssc32_driver" pkg="lynxmotion_ssc32" type="ssc32_node" output="screen">
      <rosparam command="load" file="$(find lynxmotion_al5d_support)/config/al5d.config" />
      <remap from="joint_controller/joint_states" to="joint_states"/>
    </node>
</launch>

